# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Controller\Github:
      public: true
      arguments:
        $handlerPool: '@App\EventHandler\Github\HandlerPool'

    App\EventHandler\Github\HandlerPool:
      arguments:
        $events:
          ping: '@App\EventHandler\Github\Ping'
          pull_request: '@App\EventHandler\Github\PullRequest'

    App\EventHandler\Github\PullRequest:
      arguments:
        $actions:
          opened: true
        $producer: '@old_sound_rabbit_mq.github_pr_producer'

    App\Consumer\Github\PullRequest:
      arguments:
        $actions:
          opened:
            - '@App\ActionHandler\Github\PullRequest\Opened\AutoMerge'

    App\ActionHandler\Github\PullRequest\Opened\AutoMerge:
      arguments:
        $mergeConditions:
          - '@App\ActionHandler\Github\PullRequest\Opened\MergeCondition\WhitelistedFiles'

    GuzzleHttp\Client:
      shared: false

    App\Github\Adapter:
      arguments:
        $userName: '%env(GITHUB_USERNAME)%'
        $accessToken: '%env(GITHUB_ACCESS_TOKEN)%'
        $client: '@GuzzleHttp\Client'
